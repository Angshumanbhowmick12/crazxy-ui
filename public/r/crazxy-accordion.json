{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "crazxy-accordion",
  "type": "registry:component",
  "title": "Crazxy Accordion",
  "description": "A simple crazxy accordion component",
  "registryDependencies": [],
  "files": [
    {
      "path": "components/crazxy/accordion/accordion.tsx",
      "content": "\"use client\";\r\n\r\nimport React, {\r\n  useState,\r\n  useContext,\r\n  createContext,\r\n  ReactNode,\r\n  forwardRef,\r\n} from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// Context to manage which accordion item is open\r\ntype AccordionContextType = {\r\n  openItem: string | null;\r\n  toggleItem: (value: string) => void;\r\n};\r\n\r\nconst AccordionContext = createContext<AccordionContextType | undefined>(\r\n  undefined,\r\n);\r\n\r\n// Root accordion component\r\nconst Accordion = ({ children }: { children: ReactNode }) => {\r\n  const [openItem, setOpenItem] = useState<string | null>(null);\r\n\r\n  const toggleItem = (value: string) => {\r\n    setOpenItem(prev => (prev === value ? null : value));\r\n  };\r\n\r\n  return (\r\n    <AccordionContext.Provider value={{ openItem, toggleItem }}>\r\n      <div className=\"space-y-2\">{children}</div>\r\n    </AccordionContext.Provider>\r\n  );\r\n};\r\n\r\n// Accordion item wrapper\r\nconst AccordionItem = forwardRef<\r\n  HTMLDivElement,\r\n  {\r\n    value: string;\r\n    children: ReactNode;\r\n    className?: string;\r\n  }\r\n>(({ value, children, className }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\"bg-card border rounded-lg\", className)}\r\n      data-value={value}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\nAccordionItem.displayName = \"AccordionItem\";\r\n\r\n// Accordion trigger button\r\nconst AccordionTrigger = forwardRef<\r\n  HTMLButtonElement,\r\n  {\r\n    value: string;\r\n    children: ReactNode;\r\n    className?: string;\r\n  }\r\n>(({ value, children, className }, ref) => {\r\n  const ctx = useContext(AccordionContext);\r\n  if (!ctx) {\r\n    throw new Error(\"AccordionTrigger must be used within an Accordion\");\r\n  }\r\n\r\n  const isOpen = ctx.openItem === value;\r\n\r\n  return (\r\n    <button\r\n      ref={ref}\r\n      onClick={() => ctx.toggleItem(value)}\r\n      className={cn(\r\n        \"flex justify-between w-full items-center p-4 font-medium\",\r\n        className,\r\n      )}\r\n      aria-expanded={isOpen}\r\n    >\r\n      {children}\r\n      <svg\r\n        className=\"shrink-0 ml-8 h-4 w-4 cursor-pointer transition-transform duration-200\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <rect\r\n          y=\"7\"\r\n          width=\"16\"\r\n          height=\"2\"\r\n          rx=\"1\"\r\n          className={cn(\r\n            \"fill-current transform origin-center transition duration-200 ease-out\",\r\n            isOpen ? \"rotate-180\" : \"\",\r\n          )}\r\n        />\r\n        <rect\r\n          y=\"7\"\r\n          width=\"16\"\r\n          height=\"2\"\r\n          rx=\"1\"\r\n          className={cn(\r\n            \"fill-current transform origin-center rotate-90 transition duration-200 ease-out\",\r\n            isOpen ? \"!rotate-180\" : \"\",\r\n          )}\r\n        />\r\n      </svg>\r\n    </button>\r\n  );\r\n});\r\nAccordionTrigger.displayName = \"AccordionTrigger\";\r\n\r\n// Accordion content block\r\nconst AccordionContent = forwardRef<\r\n  HTMLDivElement,\r\n  {\r\n    value: string;\r\n    children: ReactNode;\r\n    className?: string;\r\n  }\r\n>(({ value, children, className }, ref) => {\r\n  const ctx = useContext(AccordionContext);\r\n  if (!ctx) {\r\n    throw new Error(\"AccordionContent must be used within an Accordion\");\r\n  }\r\n\r\n  const isOpen = ctx.openItem === value;\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        \"grid overflow-hidden transition-all duration-300 ease-in-out text-muted-foreground text-sm\",\r\n        isOpen\r\n          ? \"grid-rows-[1fr] opacity-100 pb-3\"\r\n          : \"grid-rows-[0fr] opacity-0\",\r\n      )}\r\n    >\r\n      <div className={cn(\"overflow-hidden px-4\", className)}>{children}</div>\r\n    </div>\r\n  );\r\n});\r\nAccordionContent.displayName = \"AccordionContent\";\r\n\r\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\r\n",
      "type": "registry:component",
      "target": "components/ui/crazxy-ui/accordion.tsx"
    }
  ]
}