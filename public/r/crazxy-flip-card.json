{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "crazxy-flip-card",
  "type": "registry:component",
  "title": "Crazxy Flip card",
  "description": "A simple crazxy flip card component",
  "registryDependencies": [],
  "files": [
    {
      "path": "components/crazxy/card/flip-card.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { type VariantProps, cva } from \"class-variance-authority\";\r\nimport {\r\n  CardContent as ShadcnCardContent,\r\n  CardTitle as ShadcnCardTitle,\r\n  Card as ShadcnCard,\r\n} from \"@/components/ui/card\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// Context for flip state\r\ninterface FlipCardContextValue {\r\n  isFlipped: boolean;\r\n  setIsFlipped: React.Dispatch<React.SetStateAction<boolean>>;\r\n  mobileClickable?: boolean;\r\n}\r\n\r\nconst FlipCardContext = React.createContext<FlipCardContextValue | undefined>(\r\n  undefined\r\n);\r\n\r\n// Variants\r\nconst flipCardVariants = cva(\"group perspective-1000 [perspective:1000px]\", {\r\n  variants: {\r\n    size: {\r\n      default: \"h-[300px] w-[300px]\",\r\n      sm: \"h-[200px] w-[200px]\",\r\n      lg: \"h-[400px] w-[400px]\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"default\",\r\n  },\r\n});\r\n\r\nexport interface FlipCardProps\r\n  extends React.ComponentProps<\"div\">,\r\n    VariantProps<typeof flipCardVariants> {\r\n  mobileClickable?: boolean;\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction FlipCard({\r\n  className,\r\n  children,\r\n  size,\r\n  mobileClickable = true,\r\n  ...props\r\n}: FlipCardProps) {\r\n  const [isFlipped, setIsFlipped] = React.useState(false);\r\n\r\n  const handleClick = React.useCallback(() => {\r\n    if (mobileClickable) {\r\n      setIsFlipped(!isFlipped);\r\n    }\r\n  }, [isFlipped, mobileClickable]);\r\n\r\n  return (\r\n    <FlipCardContext.Provider\r\n      value={{ isFlipped, setIsFlipped, mobileClickable }}>\r\n      <div\r\n        className={cn(flipCardVariants({ size }), className)}\r\n        onClick={handleClick}\r\n        data-state={isFlipped ? \"flipped\" : \"front\"}\r\n        {...props}>\r\n        <div\r\n          className={cn(\r\n            \"relative h-full w-full rounded-xl transition-all duration-500 [transform-style:preserve-3d]\",\r\n            isFlipped && mobileClickable\r\n              ? \"sm:group-hover:[transform:none] [transform:rotateY(180deg)]\"\r\n              : \"group-hover:[transform:rotateY(180deg)]\"\r\n          )}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </FlipCardContext.Provider>\r\n  );\r\n}\r\n\r\nexport interface FlipCardFrontProps extends React.ComponentProps<\"div\"> {\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction FlipCardFront({ className, children, ...props }: FlipCardFrontProps) {\r\n  return (\r\n    <ShadcnCard\r\n      data-slot=\"flip-card-front\"\r\n      className={cn(\r\n        \"absolute inset-0 p-0 h-full w-full overflow-hidden [backface-visibility:hidden]\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      {children}\r\n    </ShadcnCard>\r\n  );\r\n}\r\n\r\nexport interface FlipCardBackProps extends React.ComponentProps<\"div\"> {\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction FlipCardBack({ className, children, ...props }: FlipCardBackProps) {\r\n  return (\r\n    <ShadcnCard\r\n      data-slot=\"flip-card-back\"\r\n      className={cn(\r\n        \"absolute inset-0 h-full w-full rounded-xl px-6 text-center [transform:rotateY(180deg)] [backface-visibility:hidden] sm:px-12\",\r\n        \"bg-card text-card-foreground\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      {children}\r\n    </ShadcnCard>\r\n  );\r\n}\r\n\r\nexport interface FlipCardImageProps\r\n  extends React.ImgHTMLAttributes<HTMLImageElement> {\r\n  overlay?: boolean;\r\n  overlayClassName?: string;\r\n  overlayContent?: React.ReactNode;\r\n}\r\n\r\nfunction FlipCardImage({\r\n  src,\r\n  alt = \"\",\r\n  className,\r\n  overlay = true,\r\n  overlayClassName,\r\n  overlayContent,\r\n  ...props\r\n}: FlipCardImageProps) {\r\n  return (\r\n    <div className=\"relative h-full w-full\" data-slot=\"flip-card-image\">\r\n      {src && (\r\n        <img\r\n          className={cn(\"h-full w-full object-cover\", className)}\r\n          src={src}\r\n          alt={alt}\r\n          {...props}\r\n        />\r\n      )}\r\n      {overlay && (\r\n        <div\r\n          className={cn(\r\n            \"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/20 to-transparent p-4\",\r\n            overlayClassName\r\n          )}>\r\n          {overlayContent}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport interface FlipCardContentProps extends React.ComponentProps<\"div\"> {\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction FlipCardContent({\r\n  className,\r\n  children,\r\n  ...props\r\n}: FlipCardContentProps) {\r\n  return (\r\n    <ShadcnCardContent\r\n      data-slot=\"flip-card-content\"\r\n      className={cn(\r\n        \"flex min-h-full flex-col items-center justify-center p-4\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      {children}\r\n    </ShadcnCardContent>\r\n  );\r\n}\r\n\r\nexport interface FlipCardTitleProps extends React.ComponentProps<\"h2\"> {\r\n  asChild?: boolean;\r\n}\r\n\r\nfunction FlipCardTitle({ className, children, ...props }: FlipCardTitleProps) {\r\n  return (\r\n    <ShadcnCardTitle\r\n      data-slot=\"flip-card-title\"\r\n      className={cn(\"text-xl font-bold sm:text-2xl\", className)}\r\n      {...props}>\r\n      {children}\r\n    </ShadcnCardTitle>\r\n  );\r\n}\r\n\r\nexport {\r\n  FlipCard,\r\n  FlipCardFront,\r\n  FlipCardBack,\r\n  FlipCardImage,\r\n  FlipCardContent,\r\n  FlipCardTitle,\r\n};\r\n",
      "type": "registry:component",
      "target": "components/ui/crazxy-ui/flip-card.tsx"
    }
  ]
}