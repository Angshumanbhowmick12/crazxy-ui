{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "crazxy-loader",
  "type": "registry:component",
  "title": "Crazxy Loader ",
  "description": "A simple crazxy loader component",
  "registryDependencies": [],
  "files": [
    {
      "path": "components/crazxy/loader.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst loaderVariants = cva(\r\n  \"relative rounded-full animate-spin border-4 border-transparent flex items-center justify-center\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"border-t-primary\",\r\n        secondary: \"border-t-blue-400 text-blue-400\",\r\n        destructive: \"border-t-destructive\",\r\n        outline: \"border-t-muted-foreground\",\r\n        ghost: \"border-t-muted\",\r\n      },\r\n      size: {\r\n        sm: \"w-8 h-8\",\r\n        md: \"w-12 h-12\",\r\n        lg: \"w-16 h-16\",\r\n        xl: \"w-20 h-20\",\r\n      },\r\n      nested: {\r\n        true: \"\",\r\n        false: \"\",\r\n      },\r\n    },\r\n    compoundVariants: [\r\n      {\r\n        nested: true,\r\n        size: \"sm\",\r\n        class: \"w-6 h-6\",\r\n      },\r\n      {\r\n        nested: true,\r\n        size: \"md\",\r\n        class: \"w-8 h-8\",\r\n      },\r\n      {\r\n        nested: true,\r\n        size: \"lg\",\r\n        class: \"w-12 h-12\",\r\n      },\r\n      {\r\n        nested: true,\r\n        size: \"xl\",\r\n        class: \"w-16 h-16\",\r\n      },\r\n    ],\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"md\",\r\n      nested: false,\r\n    },\r\n  }\r\n);\r\n\r\nexport interface LoaderProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof loaderVariants> {\r\n  nestedVariant?: \"default\" | \"secondary\" | \"destructive\" | \"outline\" | \"ghost\";\r\n  speed?: \"slow\" | \"normal\" | \"fast\";\r\n  color?: string;\r\n  nestedColor?: string;\r\n}\r\n\r\nconst Loader = React.forwardRef<HTMLDivElement, LoaderProps>(\r\n  (\r\n    {\r\n      className,\r\n      variant,\r\n      size,\r\n      nested,\r\n      nestedVariant,\r\n      speed = \"normal\",\r\n      color,\r\n      nestedColor,\r\n      style,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    // Custom animation speeds\r\n    const animationDuration = {\r\n      slow: \"2.5s\",\r\n      normal: \"1.5s\",\r\n      fast: \"1s\",\r\n    };\r\n\r\n    // Custom style with color if provided\r\n    const customStyle: React.CSSProperties = {\r\n      ...style,\r\n      ...(color && { borderTopColor: color }),\r\n      animationDuration: animationDuration[speed],\r\n    };\r\n\r\n    // Custom style for nested loader\r\n    const nestedCustomStyle: React.CSSProperties = {\r\n      ...(nestedColor && { borderTopColor: nestedColor }),\r\n      animationDuration:\r\n        speed === \"slow\" ? animationDuration.normal : animationDuration.fast,\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={cn(\r\n          loaderVariants({ variant, size, nested: false }),\r\n          className\r\n        )}\r\n        role=\"status\"\r\n        aria-label=\"Loading\"\r\n        ref={ref}\r\n        style={customStyle}\r\n        {...props}>\r\n        {nested && (\r\n          <div\r\n            className={cn(\r\n              loaderVariants({\r\n                variant: nestedVariant || \"secondary\",\r\n                size,\r\n                nested: true,\r\n              })\r\n            )}\r\n            style={nestedColor ? nestedCustomStyle : undefined}\r\n          />\r\n        )}\r\n        <span className=\"sr-only\">Loading</span>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nLoader.displayName = \"Loader\";\r\n\r\nexport { Loader, loaderVariants };\r\n",
      "type": "registry:component",
      "target": "components/ui/crazxy-ui/loader.tsx"
    }
  ]
}