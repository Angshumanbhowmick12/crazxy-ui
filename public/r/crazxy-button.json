{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "crazxy-button",
  "type": "registry:component",
  "title": "Crazxy Button",
  "description": "A simple crazxy button component",
  "registryDependencies": [],
  "files": [
    {
      "path": "components/crazxy/button/button.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariantsOuter = cva(\"\", {\r\n  variants: {\r\n    variant: {\r\n      primary:\r\n        \"border border-[1px] dark:border-[2px] border-black/10 dark:border-black bg-gradient-to-b from-black/70 to-black dark:from-white dark:to-white/80 p-[1px] transition duration-300 ease-in-out \",\r\n      accent:\r\n        \"border-[1px] dark:border-[2px] border-black/10 dark:border-neutral-950 bg-gradient-to-b from-indigo-300/90 to-indigo-500 dark:from-indigo-200/70 dark:to-indigo-500 p-[1px] transition duration-300 ease-in-out \",\r\n      destructive:\r\n        \"border-[1px] dark:border-[2px] border-black/10 dark:border-neutral-950 bg-gradient-to-b from-red-300/90 to-red-500 dark:from-red-300/90 dark:to-red-500 p-[1px] transition duration-300 ease-in-out \",\r\n      secondary:\r\n        \"border-[1px] dark:border-[2px] border-black/20 bg-white/50 dark:border-neutral-950 dark:bg-neutral-600/50 p-[1px] transition duration-300 ease-in-out \",\r\n      minimal:\r\n        \"group border-[1px] dark:border-[2px] border-black/20 bg-white/50 dark:border-neutral-950 dark:bg-neutral-600/80 p-[1px]  active:bg-neutral-200 dark:active:bg-neutral-800 hover:bg-gradient-to-t hover:from-neutral-100 to-white dark:hover:from-neutral-600/50 dark:hover:to-neutral-600/70 active:bg-neutral-200 dark:active:bg-neutral-800\",\r\n      icon: \"group rounded-full border dark:border-neutral-950 border-black/10 dark:bg-neutral-600/50 bg-white/50 p-[1px] active:bg-neutral-200 dark:active:bg-neutral-800 hover:bg-gradient-to-t hover:from-neutral-100 to-white dark:hover:from-neutral-700 dark:hover:to-neutral-600 active:bg-neutral-200 dark:active:bg-neutral-800\",\r\n    },\r\n    size: {\r\n      sm: \"rounded-[6px]\",\r\n      default: \"rounded-[12px]\",\r\n      lg: \"rounded-[12px]\",\r\n      icon: \"rounded-full\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"primary\",\r\n    size: \"default\",\r\n  },\r\n});\r\n\r\nconst innerDivVariants = cva(\r\n  \"w-full h-full flex cursor-pointer items-center justify-center text-muted-foreground disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none shrink-0 [&_svg]:shrink-0 outline-none  \",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        primary:\r\n          \"gap-2 bg-gradient-to-b from-neutral-800 to-black  dark:from-neutral-200 dark:to-neutral-50 text-sm text-white/90 dark:text-black/80 transition duration-300 ease-in-out  hover:from-stone-800 hover:to-neutral-800/70 dark:hover:from-stone-200 dark:hover:to-neutral-200 dark:active:from-stone-300 dark:active:to-neutral-300 active:bg-gradient-to-b active:from-black active:to-black \",\r\n        accent:\r\n          \"gap-2 bg-gradient-to-b from-indigo-400 to-indigo-600 text-sm text-white/90 transition duration-300 ease-in-out hover:bg-gradient-to-b hover:from-indigo-400/70 hover:to-indigo-600/70 dark:hover:from-indigo-400/70 dark:hover:to-indigo-600/70 active:bg-gradient-to-b active:from-indigo-400/80 active:to-indigo-600/80 dark:active:from-indigo-400 dark:active:to-indigo-600\",\r\n        destructive:\r\n          \"gap-2 bg-gradient-to-b from-red-400/60 to-red-500/60 text-sm text-white/90 transition duration-300 ease-in-out hover:bg-gradient-to-b hover:from-red-400/70 hover:to-red-600/70 dark:hover:from-red-400/70 dark:hover:to-red-500/80 active:bg-gradient-to-b active:from-red-400/80 active:to-red-600/80 dark:active:from-red-400 dark:active:to-red-500\",\r\n        secondary:\r\n          \"bg-gradient-to-b from-neutral-100/80 to-neutral-200/50 dark:from-neutral-800 dark:to-neutral-700/50 text-sm transition duration-300 ease-in-out hover:bg-gradient-to-b hover:from-neutral-200/40 hover:to-neutral-300/60 dark:hover:from-neutral-700 dark:hover:to-neutral-700/60 active:bg-gradient-to-b active:from-neutral-200/60 active:to-neutral-300/70 dark:active:from-neutral-800 dark:active:to-neutral-700\",\r\n        minimal:\r\n          \"bg-gradient-to-b from-white to-neutral-50/50 dark:from-neutral-800 dark:to-neutral-700/50 text-sm transition duration-300 ease-in-out group-hover:bg-gradient-to-b group-hover:from-neutral-50/50 group-hover:to-neutral-100/60 dark:group-hover:from-neutral-700 dark:group-hover:to-neutral-700/60 group-active:bg-gradient-to-b group-active:from-neutral-100/60 group-active:to-neutral-100/90 dark:group-active:from-neutral-800 dark:group-active:to-neutral-700\",\r\n        icon: \"bg-gradient-to-b from-white to-neutral-50/50 dark:from-neutral-800 dark:to-neutral-700/50 group-active:bg-neutral-200 dark:group-active:bg-neutral-800 rounded-full\",\r\n      },\r\n      size: {\r\n        sm: \"text-xs rounded-[4px] px-4 py-1\",\r\n        default: \"text-sm rounded-[10px] px-4 py-2\",\r\n        lg: \"text-base rounded-[10px] px-4 py-2\",\r\n        icon: \" rounded-full p-1\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"primary\",\r\n      size: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nexport interface UnifiedButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?:\r\n    | \"primary\"\r\n    | \"secondary\"\r\n    | \"accent\"\r\n    | \"destructive\"\r\n    | \"minimal\"\r\n    | \"icon\";\r\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\r\n  asChild?: boolean;\r\n}\r\n\r\nconst TextureButton = React.forwardRef<HTMLButtonElement, UnifiedButtonProps>(\r\n  (\r\n    {\r\n      children,\r\n      variant = \"primary\",\r\n      size = \"default\",\r\n      asChild = false,\r\n      className,\r\n      ...props\r\n    },\r\n    ref,\r\n  ) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariantsOuter({ variant, size }), className)}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        <div className={cn(innerDivVariants({ variant, size }))}>\r\n          {children}\r\n        </div>\r\n      </Comp>\r\n    );\r\n  },\r\n);\r\n\r\nTextureButton.displayName = \"TextureButton\";\r\n\r\nexport { TextureButton as Button, buttonVariantsOuter as buttonVariants };\r\n",
      "type": "registry:component",
      "target": "components/ui/crazxy-ui/button.tsx"
    }
  ]
}